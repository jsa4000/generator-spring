openapi: 3.0.2
info:
  title: <%- preffixClassName %> Microservice
  description: <%- preffixClassName %> microservice
  version: 0.1.0-SNAPSHOT
servers:
  - url: http://localhost:8080/{basePath}
    description: local dev url
    variables:
      basePath:
        enum:
          - 'api'
        default: 'api'
tags:
  - name: <%- projectName %>
    description: <%- preffixClassName %> API
paths:
  /<%- projectName %>:
    get:
      security:
        - BearerAuth: []
      tags:
        - <%- projectName %>
      summary: Get List of <%- preffixClassName %>
      operationId: find<%- preffixClassName %>Page
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: amount
          in: query
          schema:
            type: number
            format: double
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/<%- preffixClassName %>Type'
        - name: pageNumber
          in: query
          schema: 
            type: integer
            format: int64
            minimum: 0
        - name: pageSize
          in: query
          schema: 
            type: integer
            format: int64
            minimum: 1
      responses:
        200:
          description: A pagination result object of <%- preffixClassName %>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResult<%- preffixClassName %>'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
    post:
      security:
        - BearerAuth: []
      tags:
        - <%- projectName %>
      summary: Create new <%- preffixClassName %>
      operationId: create<%- preffixClassName %>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/<%- preffixClassName %>'
      responses:
        201:
          description: Created
          headers:
            Location:
              description: Location where new <%- preffixClassName %> has been created
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
  /<%- projectName %>/{id}:
    get:
      security:
        - BearerAuth: []
      tags:
        - <%- projectName %>
      summary: Get <%- preffixClassName %> by id
      operationId: find<%- preffixClassName %>ById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        200:
          description: A JSON object with <%- preffixClassName %>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/<%- preffixClassName %>'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
    put:
      security:
        - BearerAuth: []
      tags:
        - <%- projectName %>
      summary: Update metadata <%- preffixClassName %> by id
      operationId: update<%- preffixClassName %>ById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/<%- preffixClassName %>'
      responses:
        204:
          description: No content
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
    delete:
      security:
        - BearerAuth: []
      tags:
        - <%- projectName %>
      summary: Delete <%- preffixClassName %> by id
      operationId: delete<%- preffixClassName %>ById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        204:
          description: No content
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
components:
  schemas:
    PaginationResult<%- preffixClassName %>:
      type: object
      required:
        - result
        - total
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/<%- preffixClassName %>'
        pageNumber:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
    <%- preffixClassName %>:
      type: object
      required:
        - name
        - amount
        - type
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        dischargedDate: 
          type: string
          format: date-time
        name: 
          type: string
        description: 
          type: string
        amount: 
          type: number
          format: double
          minimum: 1
        type: 
          $ref: '#/components/schemas/<%- preffixClassName %>Type'
    <%- preffixClassName %>Type:
      type: string
      enum: 
        - Enum-Type-1
        - Enum-Type-2
        - Enum-Type-3
    ErrorDescription:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          default: -1
        message:
          type: string
        stackTrace:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    